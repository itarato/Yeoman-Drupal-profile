/**
 * @file
 */

'use strict';

var generators = require('yeoman-generator');

module.exports = generators.Base.extend({

  constructor: function () {
    generators.Base.apply(this, arguments);
  },

  prompting: function () {
    var asyncWait = this.async();

    var questions = [{
      name: 'profileName',
      message: 'Profile full name'
    }, {
      name: 'machineName',
      message: 'Machine name'
    }, {
      name: 'profileDescription',
      message: 'Description',
      default: 'Auto-generated by "yo drupal-profile"'
    }, {
      type: 'list',
      name: 'drupalCore',
      message: 'Drupal core version',
      choices: ['Drupal 6', 'Drupal 7', 'Drupal 8'],
      default: 'Drupal 7'
    }, {
      type: 'confirm',
      name: 'inheritBasicProfile',
      message: 'Inherit from "Basic profile"',
      default: false
    }, {
      name: 'adminTheme',
      message: 'Admin theme',
      default: 'adminimal_theme'
    }, {
      type: 'checkbox',
      name: 'modules',
      message: 'Modules',
      choices: ['devel', 'views', 'ctools', 'entity', 'admin_menu']
    }];

    this.prompt(questions, function ( answers ) {
      this.profileName = answers.profileName;
      this.machineName = answers.machineName;
      this.profileDescription = answers.profileDescription;
      this.drupalCore = answers.drupalCore;
      this.inheritBasicProfile = answers.inheritBasicProfile;
      this.adminTheme = answers.adminTheme;
      this.modules = answers.modules;

      switch (this.drupalCore) {
        case 'Drupal 6':
          this.origModuleName = 'default';
          break;

        default:
          this.origModuleName = this.inheritBasicProfile ? 'standard' : 'minimal';
          break;
      }

      this.srcPathPrefix = this.drupalCore + '/' + this.origModuleName + '/';
      this.destPathPrefix = this.machineName + '/' + this.machineName;

      asyncWait();
    }.bind(this));
  },

  generateStructure: function () {
    this.mkdir(this.machineName);

    switch (this.drupalCore) {
      case 'Drupal 6':
        this._generateProfileFile();
        break;

      case 'Drupal 7':
        this._generateProfileFile();
        this._generateInfoFile();
        this._generateInstallFile();
        break;

      case 'Drupal 8':
        this._generateProfileFile();
        this._generateInfoFile();
        this._generateInstallFile();
        break;
    }
  },

  _generateInfoFile: function() {
    try {
      this.template(this.srcPathPrefix + this.origModuleName + '.info', this.destPathPrefix + '.info');
    } catch (e) {
      this.log('No info file');
    }
  },

  _generateProfileFile: function () {
    try {
      this.template(this.srcPathPrefix + this.origModuleName + '.profile', this.destPathPrefix + '.profile');
    } catch (e) {
      this.log('No profile file');
    }
  },

  _generateInstallFile: function () {
    try {
      this.template(this.srcPathPrefix + this.origModuleName + '.install', this.destPathPrefix + '.install');
    } catch (e) {
      this.log('No install file');
    }
  },

  moveStaticFolders: function () {
    this.log('Copy static folders');
    this.directory(this.srcPathPrefix + 'translations', this.machineName + '/translations');
  }

});
